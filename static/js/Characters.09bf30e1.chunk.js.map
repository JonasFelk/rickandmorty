{"version":3,"file":"static/js/Characters.09bf30e1.chunk.js","mappings":"sNACA,EAA0B,4BAA1B,EAA6D,yBAA7D,EAA4F,wBAA5F,EAA4H,0B,6BCC/GA,EAAwB,SAACC,GAAgB,OAAKA,EAAMC,cAAc,EAClEC,EAAwB,SAACF,GAAgB,OAAKA,EAAMC,eAAeE,IAAI,E,sCC8EpF,EA7DuB,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAiCC,EAAAA,EAAAA,IAAYP,GAArCQ,EAAK,EAALA,MAAOC,EAAa,EAAbA,cACf,GACEF,EAAAA,EAAAA,IAAYG,EAAAA,IADNC,EAAoB,EAApBA,qBAAsBC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAASC,EAAM,EAANA,OAAQC,EAAW,EAAXA,YAE/CC,GAAUT,EAAAA,EAAAA,IAAYJ,GAAtBa,MAEFC,EAAOF,EAAW,gBAAYA,GAAgB,GAC9CG,EAASP,EAAoB,gBAAYA,GAAyB,GAClEQ,EAAeP,EAAM,kBAAcA,GAAW,GAC9CQ,EAAgBP,EAAO,mBAAeA,GAAY,GAClDQ,EAAeP,EAAM,kBAAcA,GAAW,IAEpDQ,EAAAA,EAAAA,YAAU,WACRjB,GACEkB,EAAAA,EAAAA,GAAgB,CACdL,OAAAA,EACAC,aAAAA,EACAC,cAAAA,EACAC,aAAAA,EACAJ,KAAAA,KAGJO,OAAOC,SAAS,EAAG,EAErB,GAAG,CAACpB,EAAUa,EAAQN,EAAQC,EAASC,EAAQG,IAE/C,IAIMS,EAAalB,EAAMmB,KAAI,SAACC,GAAG,OAAK,SAACC,EAAA,GAAI,UAAkBD,GAAZA,EAAIE,GAAe,IAC9DC,GAAY,OAAI,IAAIC,MAAM,KAAKL,KAAI,SAACM,EAAGC,GAAK,OAChD,SAAC,KAAQ,GAAMA,EAAS,IAG1B,OACE,oBAASC,UAAWC,EAAe,UACjC,gBAAKD,UAAU,YAAW,UACxB,iBAAKA,UAAWC,EAAW,WACzB,SAAC,KAAM,KACP,iBAAKD,UAAWC,EAAY,WAC1B,gBAAKD,UAAWC,EAAa,SAC1B3B,IAAkB4B,EAAAA,EAAAA,QAAiBN,EAAYL,IAEjDV,EAAQ,IACP,SAAC,KAAU,CACTsB,aApBc,SAACrB,GAC3BZ,GAASkC,EAAAA,EAAAA,IAAetB,GAC1B,EAmBcuB,UAAWxB,EACXD,YAAaA,OAIlBN,IAAkB4B,EAAAA,EAAAA,OAAe,SAAC,KAAkB,IAAM,SAKrE,C","sources":["webpack://react-rickandmorty/./src/pages/Characters/Characters.module.scss?7b3d","redux/character/selectors.ts","pages/Characters/Characters.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Characters_section__anh9X\",\"root\":\"Characters_root__EpfPf\",\"row\":\"Characters_row__E9YtB\",\"items\":\"Characters_items__ElUPB\"};","import { RootState } from \"../store\";\n\nexport const selectorCharacterData = (state: RootState) => state.characterSlice\nexport const selectorCharacterInfo = (state: RootState) => state.characterSlice.info\n","import React, { FC, useEffect } from 'react'\n\nimport { Card } from '../../components/Card/Card'\n\nimport styles from '../Characters/Characters.module.scss'\nimport { useSelector } from 'react-redux'\n\nimport { useAppDispatch } from '../../redux/store'\nimport { selectorFilter, setCurrentPage } from '../../redux/filter/filterSlice'\nimport {\n  selectorCharacterData,\n  selectorCharacterInfo,\n} from '../../redux/character/selectors'\n\nimport { Status } from '../../redux/character/types'\nimport { fetchCharacters } from '../../redux/asyncActions'\n\nimport { Filter, Pagination, Skeleton, CharactersNotFound } from '../../components'\n\n\nconst Characters: FC = () => {\n  const dispatch = useAppDispatch()\n\n  const { items, statusLoading } = useSelector(selectorCharacterData)\n  const { debouncedSearchValue, status, species, gender, currentPage } =\n    useSelector(selectorFilter)\n  const { pages } = useSelector(selectorCharacterInfo)\n\n  const page = currentPage ? `&page=${currentPage}` : ''\n  const search = debouncedSearchValue ? `&name=${debouncedSearchValue}` : ''\n  const sortByStatus = status ? `&status=${status}` : ''\n  const sortBySpecies = species ? `&species=${species}` : ''\n  const sortByGender = gender ? `&gender=${gender}` : ''\n\n  useEffect(() => {\n    dispatch(\n      fetchCharacters({\n        search,\n        sortByStatus,\n        sortBySpecies,\n        sortByGender,\n        page,\n      })\n    )\n    window.scrollTo(0, 0)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, search, status, species, gender, page])\n\n  const onChangeCurrentPage = (page: number) => {\n    dispatch(setCurrentPage(page))\n  }\n\n  const characters = items.map((obj) => <Card key={obj.id} {...obj} />)\n  const skeletons = [...new Array(20)].map((_, index) => (\n    <Skeleton key={index} />\n  ))\n\n  return (\n    <section className={styles.section}>\n      <div className='container'>\n        <div className={styles.row}>\n          <Filter />\n          <div className={styles.root}>\n            <div className={styles.items}>\n              {statusLoading === Status.LOADING ? skeletons : characters}\n            </div>\n            {pages > 1 && (\n              <Pagination\n                onChangePage={onChangeCurrentPage}\n                pageCount={pages}\n                currentPage={currentPage}\n              />\n            )}\n          </div>\n          {statusLoading === Status.ERROR ? <CharactersNotFound /> : ''}\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Characters\n"],"names":["selectorCharacterData","state","characterSlice","selectorCharacterInfo","info","dispatch","useAppDispatch","useSelector","items","statusLoading","selectorFilter","debouncedSearchValue","status","species","gender","currentPage","pages","page","search","sortByStatus","sortBySpecies","sortByGender","useEffect","fetchCharacters","window","scrollTo","characters","map","obj","Card","id","skeletons","Array","_","index","className","styles","Status","onChangePage","setCurrentPage","pageCount"],"sourceRoot":""}